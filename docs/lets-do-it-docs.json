{
  "swagger": "2.0",
  "info": {
    "description": "Let's Do It is a task management project (a to-do list) implemented for studying purposes. This API provides all operations regarding tasks. For more information, please check its [github repository](https://github.com/coop-code/lets-do-it-api)",
    "version": "0.2.0",
    "title": "Lets Do It API",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/coop-code/lets-do-it/issues",
      "email": "brenowschneider@gmail.com"
    }
  },
  "host": "http://localhost:4001",
  "schemes": [
    "https"
  ],
  "paths": {
    "/tasks": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Add a new task",
        "operationId": "addTask",
        "consumes": [
          "application/json"
        ],
        "produces": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Task object that needs to be added to tasks list",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PostTaskDto"
          }
        }],
        "responses": {
          "201": {
            "description": "Task succesfully created",
            "schema": {
              "$ref": "#/definitions/GetTaskDto"
            }
          },
          "422": {
            "description": "Task object not semantically valid"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get list of tasks",
        "operationId": "GetTasks",
        "parameters": [{
          "in": "query",
          "name": "finished",
          "description": "Search for finished tasks (true) or unfinished tasks (false) - Default value is false",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Request completed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTaskDto"
              }
            }
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Find tasks by ID",
        "description": "Returns a single tasks",
        "operationId": "getTaskById",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of the task",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "responses": {
          "200": {
            "description": "Request completed",
            "schema": {
              "$ref": "#/definitions/GetTaskDto"
            }
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Deletes a task",
        "description": "",
        "operationId": "deleteTask",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of the task",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "responses": {
          "204": {
            "description": "Request Completed"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "PostTaskDto": {
      "type": "object",
      "required": ["title", "priority"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task"
        },
        "comments": {
          "type": "string",
          "description": "Aditional comments"
        },
        "priority": {
          "type": "boolean",
          "description": "Indicates if the task is priority or not"
        },
        "deadlineDate": {
          "type": "string",
          "format": "date-time",
          "description": "Task due date"
        }
      }
    },
    "GetTaskDto": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Task unique identifier"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the task"
        },
        "comments": {
          "type": "string",
          "description": "Aditional comments"
        },
        "priority": {
          "type": "boolean",
          "description": "Indicates if the task is priority or not"
        },
        "done": {
          "type": "boolean",
          "description": "Indicates if the task is done (finished) or not"
        },
        "deadlineDate": {
          "type": "string",
          "format": "date-time",
          "description": "Task due date"
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Task registration time"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}